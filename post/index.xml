<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 庆玲的博客</title>
    <link>https://qingling0910.github.io/post/</link>
    <description>Recent content in Posts on 庆玲的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Mar 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://qingling0910.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker常用命令</title>
      <link>https://qingling0910.github.io/post/docker_command/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/docker_command/</guid>
      <description>1.查看本地镜像
docker images 2.查看 docker 日志
docker logs -f 镜像名 3.使用 docker 启动服务
docker start 镜像名 4.使用 docker 停止服务
docker stop 镜像名 5.</description>
    </item>
    
    <item>
      <title>使用docker启动mysql</title>
      <link>https://qingling0910.github.io/post/docker_mysql/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/docker_mysql/</guid>
      <description>1.拉取mysql镜像
 docker pull mysql
 2.启动mysql
 docker run &amp;ndash;name mysql -p 53306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql 参数说明： -name 后面的是docker容器名 -e MYSQL_ROOT_PASSWORD 是设置mysql的root账号密码 -d mysql 是你的镜像标签</description>
    </item>
    
    <item>
      <title>使用docker启动mysql</title>
      <link>https://qingling0910.github.io/post/docker_nginx/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/docker_nginx/</guid>
      <description>拉取 nginx 镜像   docker pull nginx
 2.启动 nginx
 sudo docker run -d -p 8081:80 &amp;ndash;name nginx nginx</description>
    </item>
    
    <item>
      <title>安装docker</title>
      <link>https://qingling0910.github.io/post/docker_install/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/docker_install/</guid>
      <description>1.查看服务器内核版本
 uname -r 2.使用 bing 搜索引擎搜索 docker 官网 更新apt软件包索引，并安装最新版本的Docker Engine和containerd，或转至下一步安装特定版本
  sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.</description>
    </item>
    
    <item>
      <title>ps命令</title>
      <link>https://qingling0910.github.io/post/ps/</link>
      <pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/ps/</guid>
      <description>Linux中的ps命令是 Process Status 的缩写。 ps命令用来列出系统中当前运行的那些进程，且是当前进程的快照（执行ps命令的那个时刻的进程）； 如果想动态的显示进程信息，就可以使用top命令； 要对进程进行监测和控制，首先必须要了解当前进程的情况，也就是需要查看当前进程，而 ps 命令就是最基本同时也是非常强大的命令
使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等； ps 为我们提供了一次性的查看，它所提供的查看结果并不是动态连续的；
kill命令用于杀死进程 Linux上进程有5种状态： 1.运行（正在运行或运行队列中等待）
2.中断（休眠中，受阻，在等待某个条件中的形成或接受到信号）
3.不可中断（收到信号不唤醒和不可运行，进程必须等待直到有中断发生）
4.僵死（进程已终止，但进程描述符存在，直到父进程调用wait()系统调用后释放）
5.停止（进程收到SIGSTOP、SIGSTP、SIGTOU信号后停止运行）
ps工具标识进程的5种状态码：</description>
    </item>
    
    <item>
      <title>mysql创建用户及授权</title>
      <link>https://qingling0910.github.io/post/mysql_user/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/mysql_user/</guid>
      <description>1.创建用户： CREATE USER &amp;lsquo;username&amp;rsquo;@&amp;lsquo;host&amp;rsquo; IDENTIFIED BY &amp;lsquo;password&amp;rsquo;; 说明：
 username:你将创建的用户名 host：指定该用户在哪个主机上可以登陆，如果是本地用户可以用 localhost ，如果想让该用户可以从任意远程主机登录，可以使用通配符 % password：该用户的登录密码，密码可以为空，如果为空则该用户可以不需要密码登录服务器  2.授权： GRANT privileges ON database_name.</description>
    </item>
    
    <item>
      <title>mysql修改命令</title>
      <link>https://qingling0910.github.io/post/mysql_update/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/mysql_update/</guid>
      <description>1、修改数据库的编码 alter database db_name character set [=] charset_name; //db_name 为数据库名，charset_name 为编码格式；
2、修改表名 alter table table_name rename to new_table_name; table_name 为表名， new_table_name 为新表名</description>
    </item>
    
    <item>
      <title>磁盘管理</title>
      <link>https://qingling0910.github.io/post/disk/</link>
      <pubDate>Wed, 23 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/disk/</guid>
      <description>磁盘管理  df(英文全称：disk full ):列出文件系统的整体磁盘使用量  -a 列出所有文件系统，包括系统特有的 / proc 等文件系统
-k 以 KBytes 的容量显示各种文件系统
-m 以 MBytes 的容量显示各文件系统
-h 以GBytes, MBytes, KBytes 等格式自行显示；</description>
    </item>
    
    <item>
      <title>git命令</title>
      <link>https://qingling0910.github.io/post/git_command/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/git_command/</guid>
      <description>git命令 1、git add 将工作区的修改提交至暂存区
2、git commit 将暂存区的修改提交至当前分支
3、git reset 回退至某一版本 4、git pull 从远程更新代码
5、git push 将本地代码更新至远程分支上
6、git status 查看当前仓库的状态
7、git log 查看提交日志</description>
    </item>
    
    <item>
      <title>Markdown的语法</title>
      <link>https://qingling0910.github.io/post/markdown_syntax/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/markdown_syntax/</guid>
      <description>标题 1、使用英文状态下的#号，可表示1-6级的标题，一级标题对应一个#号，二级标题为2个#号，以此类推；
段落 1、Markdown段落没有特殊的格式，直接便携文字，段落的换行时使用两个以上空格+回车；
2、也可以在段落后面使用一个空格来表示重新开始一个新的段落
字体 1、有以下字体
斜体文本
斜体文本
粗体文本
粗斜体文本
粗斜体文本
分隔线 1、在一行中使用3个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。
2、也可以在星号或者减号中间插入空格。以下写法均可建立分隔线
      列表 1、Markdown支持有序列表和无序列表。</description>
    </item>
    
    <item>
      <title>Markdown的语法</title>
      <link>https://qingling0910.github.io/post/mysql_index/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/mysql_index/</guid>
      <description>mysql索引 优点： mysql索引可以大大提高mysql的检索速度；
创建索引时，需要确保索引是应用在mysql查询语句的条件（一般作为where子句的条件） 实际上，索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录； 缺点： 提高查询速度的同时，会降低更新表的速度，如对表进行insert、update和delete； 因为更新表时，mysql不仅要保存数据，还要保存索引文件； 建立索引会占用磁盘空间的索引文件；
普通索引   创建索引（最基本的索引，没有任何限制） CREATE INDEX index_name ON table_name (column_name) 如果是CHAR，VARCHAR类型，length可以小于字段实际长度； 如果是BLOB和TEXT类型，必须指定length。</description>
    </item>
    
    <item>
      <title>wget命令</title>
      <link>https://qingling0910.github.io/post/wget_command/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/wget_command/</guid>
      <description>wget是Linux下载文件的工具
1、安装wget yum install -y wget
2、查看帮助手册 wget -help
3、使用wget下载单个文件 wget http地址
ps命令详解
主要是查看服务器的进程信息
-e：等价于 ‘-A’ ，表示列出全部的进程 -f：显示全部的列（显示全字段）
UID:该进程执行的用户ID PID：进程ID PPID：该进程的父级进程ID，如果一个程序的父级进程ID找不到，该程序的进程被称为‘僵尸进程’ C：CPU的占用率，形式是百分数（%） STIME：进程的启动时间 TTY：终端设备，发起该进程的设备识别符号，如果显示‘？‘，表示该进程并不是由终端发起的 TIME CMD：该进程的名称或路径</description>
    </item>
    
    <item>
      <title>写博客的步骤</title>
      <link>https://qingling0910.github.io/post/blog_stpes/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/blog_stpes/</guid>
      <description>1、打开终端，进入blog，cd /code/blog，输入命令：code .
2、进入VS界面，在content/post下右键，New file
3、输入文件名，英文，无空格
4、在右侧输入框内输入博客内容
5、开头为固定格式，如上，下面接着输入正文
6、写好内容后，在下面的终端处，输入git add .
7、查看blog状态：gti status
8、接着输入git commit -m &amp;ldquo;&amp;quot;,双引号中为博客跟新的目的
9、输入git push ，推送到仓库</description>
    </item>
    
    <item>
      <title>A</title>
      <link>https://qingling0910.github.io/post/a/</link>
      <pubDate>Sat, 12 Mar 2022 19:47:36 +0800</pubDate>
      
      <guid>https://qingling0910.github.io/post/a/</guid>
      <description>我是标题 我是dada&amp;rsquo;s asdada s
adafsadssa</description>
    </item>
    
    <item>
      <title>mysql常用命令</title>
      <link>https://qingling0910.github.io/post/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://qingling0910.github.io/post/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>mysql常用语法
1、查看当前打开的数据库 SELECT DATABASE();
2、查看数据库编码 SHOW CREATE DATABASE db_name/** db_name为要修改的数据库名 */
3、查看所有数据库 show databases;
4、查看所有数据表 show tables
5、查看指定数据看下的表 show tables from db_name; //db_name数据库名</description>
    </item>
    
  </channel>
</rss>